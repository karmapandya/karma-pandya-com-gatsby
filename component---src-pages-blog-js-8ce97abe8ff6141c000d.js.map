{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/header.js","webpack:///./src/components/menu.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BlogPage","data","_public_static_d_2964518127_json__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","allMarkdownRemark","edges","map","post","key","node","id","frontmatter","author","date","alt","src","featuredimage","style","align","height","width","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","Header","_ref","siteTitle","react_default","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","propTypes","PropTypes","string","defaultProps","Menu","paddingTop","listStyle","display","justifyContent","Layout","children","_856328897","Fragment","header","site","siteMetadata","menu","Date","getFullYear","href","isRequired","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","arrayOf","object"],"mappings":"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","file":"component---src-pages-blog-js-8ce97abe8ff6141c000d.js","sourcesContent":["import React from 'react'\r\nimport { Link, useStaticQuery } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\n const BlogPage = () =>  {\r\n     const data = useStaticQuery(graphql`\r\n\r\n     query BlogIndexQuery {\r\n         allMarkdownRemark {\r\n             edges {\r\n               node {\r\n                 fields {\r\n                   slug\r\n                 }\r\n                 id\r\n                 frontmatter {\r\n                   title\r\n                   date\r\n                   author\r\n                   featuredimage\r\n                 }\r\n               }\r\n             }\r\n           }\r\n     }\r\n \r\n `)\r\n     return ( \r\n   <Layout>\r\n    <SEO title=\"BlogPage\" />\r\n        <div >\r\n              <h1>Latest Posts</h1>\r\n              {data.allMarkdownRemark.edges.map(post => (\r\n                  <div key={post.node.id}>\r\n                    <h3>{post.node.frontmatter.title}</h3>\r\n                    <small>Posted by <i>{post.node.frontmatter.author} </i> on {post.node.frontmatter.date}</small>\r\n                    <div> <img alt=\"\" src={post.node.frontmatter.featuredimage} style={{align:\"left\", height:\"225px\", width:\"350px\"}}></img></div>\r\n                   \r\n                 <br />\r\n                 <br />\r\n                 <Link to={`/blog/${post.node.fields.slug}`}>Read more</Link>\r\n                 <br />\r\n                 <br />\r\n                 <hr />\r\n                 </div>\r\n              ))}\r\n   </div>\r\n    </Layout>\r\n    )\r\n}\r\n\r\nexport default BlogPage","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `#333`,\r\n      marginBottom: `0`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Link } from 'gatsby';\r\n\r\n\r\nconst Menu = () => \r\n    (\r\n        <div style={{\r\n            background: '#f4f4f4',\r\n            paddingTop: '10px',\r\n        }}>\r\n            <ul style={{\r\n                listStyle: \"none\",\r\n                display: 'flex',\r\n                justifyContent: 'space-evenly'\r\n            }}>\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><Link to=\"/about\">About</Link></li> \r\n                <li><Link to=\"/services\">Services</Link></li>\r\n                <li><Link to=\"/blog\">Blog</Link></li>\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\nexport default Menu\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport Menu from \"./menu\"\r\nimport \"./layout.css\"\r\nimport {\r\n\tLinkedinShareButton,\r\n  TwitterShareButton,\r\n  EmailShareButton,\r\n} from 'react-share';\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <Menu />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `0px 1.0875rem 1.45rem`,\r\n          paddingTop: 0,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer>\r\n          Â© {new Date().getFullYear()}, \r\n          {` `}\r\n          <a href=\"https://www.karmapandya.com\">Karma Pandya</a>\r\n          \r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}